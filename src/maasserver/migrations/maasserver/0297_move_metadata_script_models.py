# Generated by Django 3.2.12 on 2022-11-18 13:05

import datetime

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion

import maasserver.fields
import maasserver.models.cleansave
import metadataserver.fields


class Migration(migrations.Migration):
    dependencies = [
        ("maasserver", "0296_move_metadata_node_models"),
        ("metadataserver", "0036_move_metadata_script_models"),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name="Script",
                    fields=[
                        (
                            "id",
                            models.AutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name="ID",
                            ),
                        ),
                        ("created", models.DateTimeField(editable=False)),
                        ("updated", models.DateTimeField(editable=False)),
                        (
                            "name",
                            models.CharField(max_length=255, unique=True),
                        ),
                        (
                            "title",
                            models.CharField(blank=True, max_length=255),
                        ),
                        ("description", models.TextField(blank=True)),
                        (
                            "tags",
                            django.contrib.postgres.fields.ArrayField(
                                base_field=models.TextField(),
                                blank=True,
                                default=list,
                                null=True,
                                size=None,
                            ),
                        ),
                        (
                            "script_type",
                            models.IntegerField(
                                choices=[
                                    (0, "Commissioning script"),
                                    (2, "Testing script"),
                                ],
                                default=2,
                            ),
                        ),
                        (
                            "hardware_type",
                            models.IntegerField(
                                choices=[
                                    (0, "Node"),
                                    (1, "CPU"),
                                    (2, "Memory"),
                                    (3, "Storage"),
                                    (4, "Network"),
                                    (5, "GPU"),
                                ],
                                default=0,
                            ),
                        ),
                        (
                            "parallel",
                            models.IntegerField(
                                choices=[
                                    (0, "Disabled"),
                                    (
                                        1,
                                        "Run along other instances of this script",
                                    ),
                                    (2, "Run along any other script."),
                                ],
                                default=0,
                            ),
                        ),
                        (
                            "results",
                            models.JSONField(blank=True, default=dict),
                        ),
                        (
                            "parameters",
                            models.JSONField(blank=True, default=dict),
                        ),
                        (
                            "packages",
                            models.JSONField(blank=True, default=dict),
                        ),
                        (
                            "timeout",
                            models.DurationField(
                                default=datetime.timedelta(0)
                            ),
                        ),
                        ("destructive", models.BooleanField(default=False)),
                        ("default", models.BooleanField(default=False)),
                        (
                            "for_hardware",
                            django.contrib.postgres.fields.ArrayField(
                                base_field=models.CharField(max_length=255),
                                blank=True,
                                default=list,
                                size=None,
                            ),
                        ),
                        ("may_reboot", models.BooleanField(default=False)),
                        ("recommission", models.BooleanField(default=False)),
                        (
                            "apply_configured_networking",
                            models.BooleanField(default=False),
                        ),
                        (
                            "script",
                            models.OneToOneField(
                                on_delete=django.db.models.deletion.CASCADE,
                                to="maasserver.versionedtextfile",
                            ),
                        ),
                    ],
                    options={
                        "abstract": False,
                    },
                    bases=(
                        maasserver.models.cleansave.CleanSave,
                        models.Model,
                    ),
                ),
                migrations.CreateModel(
                    name="ScriptSet",
                    fields=[
                        (
                            "id",
                            models.AutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name="ID",
                            ),
                        ),
                        (
                            "last_ping",
                            models.DateTimeField(blank=True, null=True),
                        ),
                        (
                            "result_type",
                            models.IntegerField(
                                choices=[
                                    (0, "Commissioning"),
                                    (1, "Installation"),
                                    (2, "Testing"),
                                ],
                                default=0,
                                editable=False,
                            ),
                        ),
                        (
                            "power_state_before_transition",
                            models.CharField(
                                choices=[
                                    ("on", "On"),
                                    ("off", "Off"),
                                    ("unknown", "Unknown"),
                                    ("error", "Error"),
                                ],
                                default="unknown",
                                editable=False,
                                max_length=10,
                            ),
                        ),
                        (
                            "tags",
                            django.contrib.postgres.fields.ArrayField(
                                base_field=models.TextField(),
                                blank=True,
                                default=list,
                                null=True,
                                size=None,
                            ),
                        ),
                        (
                            "node",
                            models.ForeignKey(
                                on_delete=django.db.models.deletion.CASCADE,
                                to="maasserver.node",
                            ),
                        ),
                    ],
                    bases=(
                        maasserver.models.cleansave.CleanSave,
                        models.Model,
                    ),
                ),
                migrations.CreateModel(
                    name="ScriptResult",
                    fields=[
                        (
                            "id",
                            models.AutoField(
                                auto_created=True,
                                primary_key=True,
                                serialize=False,
                                verbose_name="ID",
                            ),
                        ),
                        ("created", models.DateTimeField(editable=False)),
                        ("updated", models.DateTimeField(editable=False)),
                        (
                            "parameters",
                            models.JSONField(blank=True, default=dict),
                        ),
                        (
                            "status",
                            models.IntegerField(
                                choices=[
                                    (0, "Pending"),
                                    (1, "Running"),
                                    (2, "Passed"),
                                    (3, "Failed"),
                                    (4, "Timed out"),
                                    (5, "Aborted"),
                                    (6, "Degraded"),
                                    (7, "Installing dependencies"),
                                    (8, "Failed installing dependencies"),
                                    (9, "Skipped"),
                                    (
                                        10,
                                        "Applying custom network configuration",
                                    ),
                                    (
                                        11,
                                        "Failed to apply custom network configuration",
                                    ),
                                ],
                                default=0,
                            ),
                        ),
                        (
                            "exit_status",
                            models.IntegerField(blank=True, null=True),
                        ),
                        (
                            "script_name",
                            models.CharField(
                                editable=False, max_length=255, null=True
                            ),
                        ),
                        (
                            "output",
                            metadataserver.fields.BinaryField(
                                blank=True, default=b"", max_length=1048576
                            ),
                        ),
                        (
                            "stdout",
                            metadataserver.fields.BinaryField(
                                blank=True, default=b"", max_length=1048576
                            ),
                        ),
                        (
                            "stderr",
                            metadataserver.fields.BinaryField(
                                blank=True, default=b"", max_length=1048576
                            ),
                        ),
                        (
                            "result",
                            metadataserver.fields.BinaryField(
                                blank=True, default=b"", max_length=1048576
                            ),
                        ),
                        (
                            "started",
                            models.DateTimeField(
                                blank=True, editable=False, null=True
                            ),
                        ),
                        (
                            "ended",
                            models.DateTimeField(
                                blank=True, editable=False, null=True
                            ),
                        ),
                        ("suppressed", models.BooleanField(default=False)),
                        (
                            "interface",
                            models.ForeignKey(
                                blank=True,
                                editable=False,
                                null=True,
                                on_delete=django.db.models.deletion.CASCADE,
                                to="maasserver.interface",
                            ),
                        ),
                        (
                            "physical_blockdevice",
                            models.ForeignKey(
                                blank=True,
                                editable=False,
                                null=True,
                                on_delete=django.db.models.deletion.CASCADE,
                                to="maasserver.physicalblockdevice",
                            ),
                        ),
                        (
                            "script",
                            models.ForeignKey(
                                blank=True,
                                editable=False,
                                null=True,
                                on_delete=django.db.models.deletion.CASCADE,
                                to="maasserver.script",
                            ),
                        ),
                        (
                            "script_set",
                            models.ForeignKey(
                                editable=False,
                                on_delete=django.db.models.deletion.CASCADE,
                                to="maasserver.scriptset",
                            ),
                        ),
                        (
                            "script_version",
                            models.ForeignKey(
                                blank=True,
                                editable=False,
                                null=True,
                                on_delete=django.db.models.deletion.SET_NULL,
                                to="maasserver.versionedtextfile",
                            ),
                        ),
                    ],
                    options={
                        "abstract": False,
                    },
                    bases=(
                        maasserver.models.cleansave.CleanSave,
                        models.Model,
                    ),
                ),
                migrations.AlterField(
                    model_name="node",
                    name="current_commissioning_script_set",
                    field=models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="maasserver.scriptset",
                    ),
                ),
                migrations.AlterField(
                    model_name="node",
                    name="current_installation_script_set",
                    field=models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="maasserver.scriptset",
                    ),
                ),
                migrations.AlterField(
                    model_name="node",
                    name="current_testing_script_set",
                    field=models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="maasserver.scriptset",
                    ),
                ),
            ],
            database_operations=[],
        ),
    ]
